{"version":3,"sources":["reducers/goods.js","components/App.jsx","actions/fetchGoods.js","utils/DateConverter.jsx","components/Pages.jsx","utils/pagesCreator.js","components/Table.jsx","components/TableFilter.jsx","reducers/index.js","index.js"],"names":["SET_ITEMS","SET_CURRENT_PAGE","initState","items","currentPage","offSet","totalCount","startIndex","perPage","App","dispatch","useDispatch","useEffect","a","axios","get","response","data","type","payload","console","log","AppStyles","styled","div","DateConverter","isoDate","formattedDate","Date","toLocaleString","year","month","day","hour","minute","split","splice","newDate","join","Pages","useSelector","state","goods","pages","pagesCount","i","push","createPages","Math","ceil","PagesStyle","map","page","index","CurrentPage","PageList","onClick","setCurrentPage","span","Table","visibleItems","useState","sortConfig","setSortConfig","sortByKey","key","direction","sortedItems","React","useMemo","itemsToFilter","sort","b","id","date","title","count","distance","TableFilter","column","setColumn","condition","setÐ¡ondition","inputValue","setInputValue","searchValue","filter","item","includes","toLowerCase","length","toString","onSelectFilter","className","value","onChange","e","target","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dde42f76.chunk.js","sourcesContent":["const SET_ITEMS = 'SET_ITEMS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\n\r\nconst initState = {\r\n    items: [],\r\n    currentPage: 1, \r\n    offSet: 10,\r\n    totalCount: 0,\r\n    startIndex: 0,\r\n    perPage: 10\r\n}\r\n\r\nexport const goodsReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case SET_ITEMS:\r\n            return {\r\n                ...state,\r\n                items: action.payload.items,\r\n                totalCount: action.payload.items.length,\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload,\r\n                startIndex: (action.payload - 1) * state.offSet,\r\n            } \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setItems = items => ({\r\n    type: SET_ITEMS,\r\n    payload: items\r\n})\r\n\r\nexport const setCurrentPage = page => ({\r\n    type: SET_CURRENT_PAGE,\r\n    payload: page\r\n})","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { fetchGoods } from '../actions/fetchGoods'\r\nimport { TableFilter, Pages } from '../components'\r\n\r\nexport const App = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchGoods())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <AppStyles>\r\n            <TableFilter/>\r\n            <Pages/>\r\n        </AppStyles>\r\n    )\r\n}\r\n\r\nconst AppStyles = styled.div`\r\n    * { \r\n        box-sizing: border-box;\r\n    }\r\n    margin: 0 auto;\r\n    width: 1200px;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    .options {\r\n        select {\r\n            height: 40px;\r\n            width: 100px;\r\n            border-radius: 5px;\r\n            outline: none;\r\n            margin-right: 20px;\r\n            background-color: rgba(238, 250, 255, 0.3);\r\n            font-size: 14px;\r\n        }\r\n        input {\r\n            height: 40px;\r\n            width: 190px;\r\n            border-radius: 5px;\r\n            outline: none;\r\n            border: 1px solid black;\r\n            background-color: rgba(238, 250, 255, 0.3);\r\n        }\r\n    }\r\n    table {\r\n        margin-top: 20px;\r\n        width: 800px;\r\n        border-spacing: 0;\r\n        th {\r\n            font-size: 20px;\r\n            padding: 10px;\r\n            background-color: grey;\r\n            color: white;\r\n            cursor: pointer;\r\n            border: 0.5px solid white;\r\n            transition: 0.2s ease;\r\n            :last-child {\r\n                border-right: none\r\n            }\r\n            :nth-child(2) {\r\n                width: 220px;\r\n            }\r\n            :first-child {\r\n                border-left: none\r\n            }\r\n            :hover {\r\n                background-color: #ff5959;\r\n            }\r\n        }\r\n        td {\r\n            height: 40px;\r\n            border-bottom: 0.5px solid black;\r\n            border-right: 0.5px solid black;\r\n            :last-child {\r\n                border-right: 0.5px solid black;\r\n            }\r\n            :first-child {\r\n                border-left: 0.5px solid black;\r\n            }\r\n            text-align: center;\r\n        }\r\n    }\r\n`","import axios from 'axios'\r\nimport { setItems } from '../reducers/goods'\r\n\r\nexport const fetchGoods = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get('/fakeDB.json')\r\n            dispatch(setItems(response.data))\r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}","import React from 'react'\r\n\r\nexport const DateConverter = ({ isoDate }) => {\r\n    const options = {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n    };\r\n    const formattedDate = new Date(isoDate).toLocaleString('ru', options).split(' ');\r\n    formattedDate.splice(3, 1, 'Ð²');\r\n    const newDate = formattedDate.join(' ');\r\n    return (\r\n        <>\r\n            {newDate}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createPages } from '../utils'\r\nimport { setCurrentPage } from '../reducers/goods'\r\n\r\nexport const Pages = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const currentPage = useSelector(state => state.goods.currentPage)\r\n    const totalCount = useSelector(state => state.goods.totalCount)\r\n    const perPage = useSelector(state => state.goods.perPage)\r\n\r\n    const pagesCount = Math.ceil(totalCount / perPage)\r\n    const pages = []\r\n    createPages(pages, pagesCount, currentPage)\r\n    \r\n    return (\r\n        <PagesStyle>\r\n            {pages.map((page, index) => (\r\n                currentPage === page\r\n                    ?\r\n                <CurrentPage key={index}>{page}</CurrentPage>\r\n                    :\r\n                <PageList onClick={() => dispatch(setCurrentPage(page))} key={index}>{page}</PageList>\r\n            ))}\r\n        </PagesStyle>\r\n    )\r\n}\r\n\r\nconst PagesStyle = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 25px 0 50px; \r\n`\r\n\r\nconst PageList = styled.span`\r\n    border-radius: 100%;\r\n    border: 1px solid grey;\r\n    width: 40px;\r\n    height: 40px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    border: 2px solid rgba(142, 232, 255, 0.1);\r\n    background-color: rgba(238, 250, 255, 0.3);\r\n    border-radius: 5px;\r\n    :nth-child(even) {\r\n        margin: 0 10px;\r\n    }\r\n`\r\n\r\nconst CurrentPage = styled(PageList)`\r\n    background-color: grey;\r\n    color: white;\r\n    font-size: bold;\r\n`","export const createPages = (pages, pagesCount, currentPage) => {\r\n    if (pagesCount > 10) {\r\n        if (currentPage > 5) {\r\n            for (let i = currentPage - 4; i <= currentPage + 5; i++) {\r\n                pages.push(i)\r\n                if (i === pagesCount) break\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 1; i <= 10; i++) {\r\n                pages.push(i)\r\n                if (i === pagesCount) break\r\n            }\r\n        }\r\n    } else {\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i)\r\n        }\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { DateConverter } from '../utils'\r\n\r\nexport const Table = ({ visibleItems }) => {\r\n\r\n    const [ sortConfig, setSortConfig ] = useState(null)\r\n\r\n    const sortByKey = key => {\r\n        let direction = 'ascending'\r\n        if ( sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending' ) {\r\n            direction = 'descending';\r\n        }\r\n        setSortConfig({ key, direction })\r\n    }\r\n\r\n    const sortedItems = React.useMemo(() => {\r\n    let itemsToFilter = [...visibleItems]\r\n        if (sortConfig !== null) {\r\n            itemsToFilter.sort((a, b) => {\r\n                if (a[sortConfig.key] < b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\r\n                }\r\n                if (a[sortConfig.key] > b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\r\n                }\r\n                return 0;\r\n            });\r\n           \r\n        }\r\n        return itemsToFilter;\r\n    }, [sortConfig, visibleItems]);\r\n\r\n    return (\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n                <th>ÐÐ°ÑÐ°</th>\r\n                <th onClick={() => sortByKey('title')}>ÐÐ°Ð·Ð²Ð°Ð½Ð¸Ðµ</th>\r\n                <th onClick={() => sortByKey('count')}>ÐÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾</th>\r\n                <th onClick={() => sortByKey('distance')}>Ð Ð°ÑÑÑÐ¾ÑÐ½Ð¸Ðµ</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {sortedItems.map(({id, date, title, count, distance}) => {\r\n                return (\r\n                    <tr key={id}>\r\n                        <td><DateConverter isoDate={date}/></td>\r\n                        <td>{title}</td>\r\n                        <td>{count}</td>\r\n                        <td>{distance}Ð¼</td>\r\n                    </tr>\r\n                )\r\n            })}\r\n        </tbody>\r\n    </table>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Table } from '../components'\r\n\r\nexport const TableFilter = () => {\r\n\r\n    const items = useSelector(state => state.goods.items)\r\n    const startIndex = useSelector(state => state.goods.startIndex)\r\n    const perPage = useSelector(state => state.goods.perPage)\r\n    \r\n    const [ column, setColumn ] = useState('name')\r\n    const [ condition, setÐ¡ondition ] = useState('=')\r\n    const [ inputValue, setInputValue ] = useState('')\r\n   \r\n    const handleInputChange = e => {\r\n        setInputValue(e.target.value) \r\n    }\r\n\r\n    const onSelectFilter = (data, searchValue) => {\r\n\r\n        if(column === 'name') {\r\n            return data.filter(item => item.title.includes(searchValue.toLowerCase()))\r\n        }\r\n\r\n        if(column === 'count') {\r\n            if(searchValue.length === 0) {\r\n                return data\r\n            }\r\n            if(condition === '=') {\r\n                return data.filter(item => item.count === +searchValue)\r\n            } \r\n            if(condition === '<') {\r\n                return data.filter(item => item.count < +searchValue)\r\n            }\r\n            if(condition === '>') {\r\n                return data.filter(item => item.count > +searchValue)\r\n            } \r\n            if(condition === 'contains') {\r\n                return data.filter(item => item.count.toString().includes(searchValue.toLowerCase()))\r\n            }\r\n        }\r\n\r\n        if(column === 'distance') {\r\n            if(searchValue.length === 0) {\r\n                return data\r\n            }\r\n            if(condition === '=') {\r\n                return data.filter(item => item.distance === +searchValue)\r\n            } \r\n            if(condition === '<') {\r\n                return data.filter(item => item.distance < +searchValue)\r\n            }\r\n            if(condition === '>') {\r\n                return data.filter(item => item.distance > +searchValue)\r\n            } \r\n            if(condition === 'contains') {\r\n                return data.filter(item => item.distance.toString().includes(searchValue.toLowerCase()))\r\n            }\r\n        }\r\n    }\r\n\r\n    const paginatedItems = items.filter((item, index) => index >= startIndex && index < startIndex + perPage)\r\n    const visibleItems = onSelectFilter(paginatedItems, inputValue)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"options\">\r\n                <select value={column} onChange={e => setColumn(e.target.value)} className=\"table-select\">\r\n                    <option value=\"name\">name</option>\r\n                    <option value=\"count\">count</option>\r\n                    <option value=\"distance\">distance</option>\r\n                </select>\r\n                <select value={condition} onChange={e => setÐ¡ondition(e.target.value)} className=\"table-select\">\r\n                    <option value=\"=\">equal</option>\r\n                    <option value=\"<\">less</option>\r\n                    <option value=\">\">more</option>\r\n                    <option value=\"contains\">contains</option>\r\n                </select>\r\n                <input value={inputValue} type=\"text\" onChange={handleInputChange}/>\r\n            </div>\r\n            <Table visibleItems={visibleItems}/>\r\n        </>\r\n    )\r\n}\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport { goodsReducer } from './goods'\r\n\r\nconst rootReducer = combineReducers({\r\n    goods: goodsReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './reducers'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}